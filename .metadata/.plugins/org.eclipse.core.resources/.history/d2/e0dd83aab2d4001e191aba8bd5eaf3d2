package com.linkup.config;

import java.io.IOException;

import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.web.filter.OncePerRequestFilter;

import jakarta.servlet.Filter;
import jakarta.servlet.FilterChain;
import jakarta.servlet.ServletException;
import jakarta.servlet.ServletRequest;
import jakarta.servlet.ServletResponse;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

public abstract class jwtValidator extends OncePerRequestFilter {

	protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		String jwt = request.getHeader(JwtConstant.JWT_HEADER);

		if (jwt != null) {
			try {
				String email = JwtProvider.getEmailFromJwtToken(jwt, null);

				List<GrantedAuthority> authorities = new ArrayList<>();

				Authentication authentication = new UsernamePasswordAuthenticationToken(email, null, authorities);

				SecurityContextHolder.getContext().setAuthentication(authentication);

			} catch (Exception e) {

				throw new BadCredentialException("invalid to")
				
			}
		}

	}

}
